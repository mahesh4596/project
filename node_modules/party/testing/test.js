
/**
 * Module dependencies.
 */

// swaks for testing
// EHLO respond with 8BITMIME

// TODO: study the parser's code
// TODO: better plugin api
// TODO: limit plugin
// TODO: data proxy
// TODO: inline content-disposition CID?
// TODO: throttling..
// TODO: charsets
// TODO: logging
// TODO: spam
// TODO: 8-bit clean 8BITMIME, no lower than 1000 octets per line
// TODO: Qmail

var party = require('../')
  , fs = require('fs')
  , file = __dirname + '/messages/youtube'
  , str = fs.readFileSync(file, 'ascii').replace(/\n/g, '\r\n')
  , buf = new Buffer(str)
  , inspect = require('util').inspect;

var parser = party.createParser('Apple-Mail-1--1023617563', { length: buf.length });

parser.on('part', function(part){
  console.log('---');
  console.log(part.header);
  part.decode().on('data', function(chunk){
    console.log(chunk.toString());
  });
});

var start = new Date;

var n = 1, len = 0;
while (n--) {
  len += buf.length;
  parser.parse(buf);
}

var ms = new Date - start;

console.log('%dkb in %dms'
  , (len / 1024).toFixed(2)
  , new Date - start);

var s = ms / 1000;
var bytes = (1 / s) * len;
var mb = Math.pow(1024, 2);
console.log('%d mb/s', (bytes / mb).toFixed(2));

