
/**
 * Module dependencies.
 */

var party = require('../')
  , should = require('should')
  , fs = require('fs');

/**
 * Test count.
 */

var count = 0;

/**
 * Failure count.
 */

var failures = 0;

/**
 * Only run the cases given.
 */

var only = process.argv.slice(2);

/**
 * Test the given `test`.
 *
 * @param {String} test
 * @param {Function} fn
 */

function test(test, fn) {
  var path = __dirname + '/cases/' + test
    , start = new Date;

  fs.readFile(path, 'utf8', function(err, str){
    if (err) throw err;
    var buf = new Buffer(str.replace(/\n/g, '\r\n'))
      , mod = require(path + '.js');

    var parser = party.createParser(mod.boundary);

    mod.test(parser, function(){
      console.error('\r  \033[36mâœ” \033[90m%s %sms\033[0m', test, new Date - start);
      fn();
    });

    parser.parse(buf);
  });

  return test;
};

/**
 * Auto-load and run tests.
 */

fs.readdir(__dirname + '/cases', function(err, files){
  if (err) throw err;
  var tests = []
    , curr;

  files.forEach(function(file){
    if (!~file.indexOf('.js') && !~file.indexOf('.out')) {
      ++count;
      if (only.length && !~only.indexOf(file)) return;
      tests.push(file);
    }
  });

  (function next() {
    curr = tests.shift();
    if (!curr) return done();
    process.stderr.write('    \033[90m' + curr + '\033[0m');
    test(curr, next);
  })();
});

/**
 * Done!!!
 */

function done() {
  console.error();
  console.error(
      '  \033[90mcompleted'
    + ' \033[32m%d'
    + ' \033[90mtests', count);
  console.error('  $ open /tmp/party* to verify files\033[0m');

  if (failures) {
    console.error('  \033[90mfailed\033[0m'
      + ' \033[31m%d\033[0m'
      + ' \033[90mtests\033[0m', failures);
    process.exit(failures);
  }

  console.error();
}

console.error();